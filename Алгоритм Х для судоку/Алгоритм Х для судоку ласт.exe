	.file	"\300\353\343\356\360\350\362\354 \325 \344\353\377 \361\363\344\356\352\363 \353\340\361\362.c"
 # GNU C (tdm64-1) version 4.7.1 (x86_64-w64-mingw32)
 #	compiled by GNU C version 4.7.1, GMP version 4.3.2, MPFR version 2.4.2, MPC version 0.8.2
 # GGC heuristics: --param ggc-min-expand=100 --param ggc-min-heapsize=131072
 # options passed: 
 # -I C:\Program Files (x86)\Dev-Cpp\MinGW64\x86_64-w64-mingw32\include
 # -iprefix c:\program files (x86)\dev-cpp\mingw64\bin\../lib/gcc/x86_64-w64-mingw32/4.7.1/
 # -U_REENTRANT
 # C:\Users\Lenovo Y 520\source\repos\Алгоритм Х для судоку\Алгоритм Х для судоку\Алгоритм Х для судоку ласт.c
 # -mtune=generic -march=x86-64
 # -auxbase-strip C:\Users\Lenovo Y 520\source\repos\Алгоритм Х для судоку\Алгоритм Х для судоку\Алгоритм Х для судоку ласт.exe
 # -fverbose-asm
 # options enabled:  -fasynchronous-unwind-tables -fauto-inc-dec
 # -fbranch-count-reg -fcommon -fdebug-types-section
 # -fdelete-null-pointer-checks -fdwarf2-cfi-asm -fearly-inlining
 # -feliminate-unused-debug-types -ffunction-cse -fgcse-lm -fgnu-runtime
 # -fident -finline-atomics -fira-share-save-slots -fira-share-spill-slots
 # -fivopts -fkeep-inline-dllexport -fkeep-static-consts
 # -fleading-underscore -fmath-errno -fmerge-debug-strings
 # -fmove-loop-invariants -fpeephole -fpic -fprefetch-loop-arrays
 # -freg-struct-return -fsched-critical-path-heuristic
 # -fsched-dep-count-heuristic -fsched-group-heuristic -fsched-interblock
 # -fsched-last-insn-heuristic -fsched-rank-heuristic -fsched-spec
 # -fsched-spec-insn-heuristic -fsched-stalled-insns-dep
 # -fset-stack-executable -fshow-column -fsigned-zeros
 # -fsplit-ivs-in-unroller -fstrict-volatile-bitfields -ftrapping-math
 # -ftree-cselim -ftree-forwprop -ftree-loop-if-convert -ftree-loop-im
 # -ftree-loop-ivcanon -ftree-loop-optimize -ftree-parallelize-loops=
 # -ftree-phiprop -ftree-pta -ftree-reassoc -ftree-scev-cprop
 # -ftree-slp-vectorize -ftree-vect-loop-version -funit-at-a-time
 # -funwind-tables -fvect-cost-model -fverbose-asm
 # -fzero-initialized-in-bss -m128bit-long-double -m64 -m80387
 # -maccumulate-outgoing-args -malign-double -malign-stringops
 # -mfancy-math-387 -mfentry -mfp-ret-in-387 -mieee-fp -mmmx -mms-bitfields
 # -mno-sse4 -mpush-args -mred-zone -msse -msse2 -mstack-arg-probe

	.globl	P
	.data
	.align 4
P:
	.long	1
	.text
	.globl	minimal
	.def	minimal;	.scl	2;	.type	32;	.endef
	.seh_proc	minimal
minimal:
	pushq	%rbp	 #
	.seh_pushreg	%rbp
	movq	%rsp, %rbp	 #,
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # starter, starter
	movl	$0, -4(%rbp)	 #, i
	movl	$99999999, -8(%rbp)	 #, j
	movq	$0, -16(%rbp)	 #, temp_ptr
	movq	$0, -24(%rbp)	 #, add_ptr
	jmp	.L2	 #
.L6:
	movl	$0, -4(%rbp)	 #, i
	movq	16(%rbp), %rax	 # starter, tmp64
	movq	(%rax), %rax	 # *starter_11(D), tmp65
	movq	%rax, -16(%rbp)	 # tmp65, temp_ptr
	jmp	.L3	 #
.L4:
	movq	-16(%rbp), %rax	 # temp_ptr, tmp66
	movq	48(%rax), %rax	 # temp_ptr_4->down, tmp67
	movq	%rax, -16(%rbp)	 # tmp67, temp_ptr
	addl	$1, -4(%rbp)	 #, i
.L3:
	movq	-16(%rbp), %rax	 # temp_ptr, tmp68
	movq	48(%rax), %rax	 # temp_ptr_4->down, D.4561
	testq	%rax, %rax	 # D.4561
	jne	.L4	 #,
	movl	-8(%rbp), %eax	 # j, tmp69
	cmpl	-4(%rbp), %eax	 # i, tmp69
	jle	.L5	 #,
	movl	-4(%rbp), %eax	 # i, tmp70
	movl	%eax, -8(%rbp)	 # tmp70, j
	movq	16(%rbp), %rax	 # starter, tmp71
	movq	(%rax), %rax	 # *starter_11(D), tmp72
	movq	%rax, -24(%rbp)	 # tmp72, add_ptr
.L5:
	movq	16(%rbp), %rax	 # starter, tmp73
	movq	(%rax), %rax	 # *starter_11(D), D.4564
	movq	32(%rax), %rdx	 # D.4564_21->right, D.4565
	movq	16(%rbp), %rax	 # starter, tmp74
	movq	%rdx, (%rax)	 # D.4565, *starter_11(D)
.L2:
	movq	16(%rbp), %rax	 # starter, tmp75
	movq	(%rax), %rax	 # *starter_11(D), D.4566
	movl	12(%rax), %eax	 # D.4566_12->key, D.4567
	testl	%eax, %eax	 # D.4567
	je	.L6	 #,
	movq	16(%rbp), %rax	 # starter, tmp76
	movq	-24(%rbp), %rdx	 # add_ptr, tmp77
	movq	%rdx, (%rax)	 # tmp77, *starter_11(D)
	addq	$32, %rsp	 #,
	popq	%rbp	 #
	ret
	.seh_endproc
	.globl	push
	.def	push;	.scl	2;	.type	32;	.endef
	.seh_proc	push
push:
	pushq	%rbp	 #
	.seh_pushreg	%rbp
	movq	%rsp, %rbp	 #,
	subq	$48, %rsp	 #,
	.seh_stackalloc	48
	.seh_setframe	%rbp, 48
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # top_ptr, top_ptr
	movq	%rdx, 24(%rbp)	 # ptr, ptr
	movq	$0, -8(%rbp)	 #, new_ptr
	movl	$16, %ecx	 #,
	call	malloc	 #
	movq	%rax, -8(%rbp)	 # tmp60, new_ptr
	cmpq	$0, -8(%rbp)	 #, new_ptr
	je	.L7	 #,
	movq	-8(%rbp), %rax	 # new_ptr, tmp61
	movl	$16, %r8d	 #,
	movl	$0, %edx	 #,
	movq	%rax, %rcx	 # tmp61,
	call	memset	 #
	movq	-8(%rbp), %rax	 # new_ptr, tmp62
	movq	24(%rbp), %rdx	 # ptr, tmp63
	movq	%rdx, (%rax)	 # tmp63, new_ptr_2->ptr
	movq	16(%rbp), %rax	 # top_ptr, tmp64
	movq	(%rax), %rdx	 # *top_ptr_4(D), D.4560
	movq	-8(%rbp), %rax	 # new_ptr, tmp65
	movq	%rdx, 8(%rax)	 # D.4560, new_ptr_2->next
	movq	16(%rbp), %rax	 # top_ptr, tmp66
	movq	-8(%rbp), %rdx	 # new_ptr, tmp67
	movq	%rdx, (%rax)	 # tmp67, *top_ptr_4(D)
.L7:
	addq	$48, %rsp	 #,
	popq	%rbp	 #
	ret
	.seh_endproc
	.globl	pop
	.def	pop;	.scl	2;	.type	32;	.endef
	.seh_proc	pop
pop:
	pushq	%rbp	 #
	.seh_pushreg	%rbp
	movq	%rsp, %rbp	 #,
	subq	$48, %rsp	 #,
	.seh_stackalloc	48
	.seh_setframe	%rbp, 48
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # top_ptr, top_ptr
	movq	$0, -8(%rbp)	 #, temp_ptr
	movq	16(%rbp), %rax	 # top_ptr, tmp62
	movq	(%rax), %rax	 # *top_ptr_2(D), D.4553
	testq	%rax, %rax	 # D.4553
	je	.L9	 #,
	movq	16(%rbp), %rax	 # top_ptr, tmp63
	movq	(%rax), %rax	 # *top_ptr_2(D), tmp64
	movq	%rax, -8(%rbp)	 # tmp64, temp_ptr
	movq	16(%rbp), %rax	 # top_ptr, tmp65
	movq	(%rax), %rax	 # *top_ptr_2(D), D.4556
	movq	8(%rax), %rdx	 # D.4556_5->next, D.4557
	movq	16(%rbp), %rax	 # top_ptr, tmp66
	movq	%rdx, (%rax)	 # D.4557, *top_ptr_2(D)
	movq	-8(%rbp), %rax	 # temp_ptr, tmp67
	movq	%rax, %rcx	 # tmp67,
	call	free	 #
	nop
.L9:
	addq	$48, %rsp	 #,
	popq	%rbp	 #
	ret
	.seh_endproc
	.globl	in
	.def	in;	.scl	2;	.type	32;	.endef
	.seh_proc	in
in:
	pushq	%rbp	 #
	.seh_pushreg	%rbp
	movq	%rsp, %rbp	 #,
	subq	$64, %rsp	 #,
	.seh_stackalloc	64
	.seh_setframe	%rbp, 64
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # start_ptr, start_ptr
	movl	%edx, 24(%rbp)	 # row, row
	movl	%r8d, 32(%rbp)	 # col, col
	movl	%r9d, 40(%rbp)	 # key, key
	movq	$0, -8(%rbp)	 #, new_ptr
	movq	$0, -16(%rbp)	 #, prev_ptr
	movq	16(%rbp), %rax	 # start_ptr, tmp71
	movq	(%rax), %rax	 # *start_ptr_3(D), tmp72
	movq	%rax, -24(%rbp)	 # tmp72, cur_ptr
	movl	$56, %ecx	 #,
	call	malloc	 #
	movq	%rax, -8(%rbp)	 # tmp73, new_ptr
	cmpq	$0, -8(%rbp)	 #, new_ptr
	je	.L11	 #,
	movq	-8(%rbp), %rax	 # new_ptr, tmp74
	movl	$56, %r8d	 #,
	movl	$0, %edx	 #,
	movq	%rax, %rcx	 # tmp74,
	call	memset	 #
	movq	-8(%rbp), %rax	 # new_ptr, tmp75
	movl	24(%rbp), %edx	 # row, tmp76
	movl	%edx, (%rax)	 # tmp76, new_ptr_5->row
	movq	-8(%rbp), %rax	 # new_ptr, tmp77
	movl	32(%rbp), %edx	 # col, tmp78
	movl	%edx, 4(%rax)	 # tmp78, new_ptr_5->col
	movq	-8(%rbp), %rax	 # new_ptr, tmp79
	movl	40(%rbp), %edx	 # key, tmp80
	movl	%edx, 12(%rax)	 # tmp80, new_ptr_5->key
	movq	-8(%rbp), %rax	 # new_ptr, tmp81
	movl	48(%rbp), %edx	 # numb, tmp82
	movl	%edx, 16(%rax)	 # tmp82, new_ptr_5->numb
	movq	-8(%rbp), %rax	 # new_ptr, tmp83
	movl	56(%rbp), %edx	 # quad, tmp84
	movl	%edx, 8(%rax)	 # tmp84, new_ptr_5->quad
	movq	-8(%rbp), %rax	 # new_ptr, tmp85
	movq	$0, 32(%rax)	 #, new_ptr_5->right
	movq	-8(%rbp), %rax	 # new_ptr, tmp86
	movq	$0, 48(%rax)	 #, new_ptr_5->down
	movq	-8(%rbp), %rax	 # new_ptr, tmp87
	movq	$0, 24(%rax)	 #, new_ptr_5->left
	movq	-8(%rbp), %rax	 # new_ptr, tmp88
	movq	$0, 40(%rax)	 #, new_ptr_5->up
	cmpl	$1, 64(%rbp)	 #, mode
	jne	.L13	 #,
	movq	16(%rbp), %rax	 # start_ptr, tmp89
	movq	(%rax), %rdx	 # *start_ptr_3(D), D.4535
	movq	-8(%rbp), %rax	 # new_ptr, tmp90
	movq	%rdx, 32(%rax)	 # D.4535, new_ptr_5->right
	movq	16(%rbp), %rax	 # start_ptr, tmp91
	movq	-8(%rbp), %rdx	 # new_ptr, tmp92
	movq	%rdx, (%rax)	 # tmp92, *start_ptr_3(D)
	cmpq	$0, -24(%rbp)	 #, cur_ptr
	je	.L11	 #,
	movq	-24(%rbp), %rax	 # cur_ptr, tmp93
	movq	-8(%rbp), %rdx	 # new_ptr, tmp94
	movq	%rdx, 24(%rax)	 # tmp94, cur_ptr_4->left
	jmp	.L11	 #
.L13:
	movq	16(%rbp), %rax	 # start_ptr, tmp95
	movq	(%rax), %rax	 # *start_ptr_3(D), D.4539
	movl	8(%rax), %edx	 # D.4539_13->quad, D.4540
	movq	-8(%rbp), %rax	 # new_ptr, tmp96
	movl	%edx, 8(%rax)	 # D.4540, new_ptr_5->quad
	movq	16(%rbp), %rax	 # start_ptr, tmp97
	movq	(%rax), %rdx	 # *start_ptr_3(D), D.4541
	movq	-8(%rbp), %rax	 # new_ptr, tmp98
	movq	%rdx, 40(%rax)	 # D.4541, new_ptr_5->up
	movq	16(%rbp), %rax	 # start_ptr, tmp99
	movq	(%rax), %rax	 # *start_ptr_3(D), D.4542
	movq	48(%rax), %rax	 # D.4542_16->down, D.4543
	testq	%rax, %rax	 # D.4543
	je	.L14	 #,
	movq	16(%rbp), %rax	 # start_ptr, tmp100
	movq	(%rax), %rax	 # *start_ptr_3(D), D.4546
	movq	48(%rax), %rax	 # D.4546_18->down, D.4547
	movq	-8(%rbp), %rdx	 # new_ptr, tmp101
	movq	%rdx, 40(%rax)	 # tmp101, D.4547_19->up
	movq	16(%rbp), %rax	 # start_ptr, tmp102
	movq	(%rax), %rax	 # *start_ptr_3(D), D.4548
	movq	48(%rax), %rdx	 # D.4548_20->down, D.4549
	movq	-8(%rbp), %rax	 # new_ptr, tmp103
	movq	%rdx, 48(%rax)	 # D.4549, new_ptr_5->down
	movq	16(%rbp), %rax	 # start_ptr, tmp104
	movq	(%rax), %rax	 # *start_ptr_3(D), D.4550
	movq	-8(%rbp), %rdx	 # new_ptr, tmp105
	movq	%rdx, 48(%rax)	 # tmp105, D.4550_22->down
	jmp	.L15	 #
.L14:
	movq	16(%rbp), %rax	 # start_ptr, tmp106
	movq	(%rax), %rax	 # *start_ptr_3(D), D.4552
	movq	-8(%rbp), %rdx	 # new_ptr, tmp107
	movq	%rdx, 48(%rax)	 # tmp107, D.4552_23->down
.L15:
	movq	16(%rbp), %rax	 # start_ptr, tmp108
	movq	-8(%rbp), %rdx	 # new_ptr, tmp109
	movq	%rdx, (%rax)	 # tmp109, *start_ptr_3(D)
.L11:
	addq	$64, %rsp	 #,
	popq	%rbp	 #
	ret
	.seh_endproc
	.globl	findcol
	.def	findcol;	.scl	2;	.type	32;	.endef
	.seh_proc	findcol
findcol:
	pushq	%rbp	 #
	.seh_pushreg	%rbp
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # start_ptr, start_ptr
	movl	%edx, 24(%rbp)	 # row, row
	movl	%r8d, 32(%rbp)	 # col, col
	movl	%r9d, 40(%rbp)	 # key, key
	cmpl	$0, 40(%rbp)	 #, key
	jne	.L17	 #,
	cmpq	$0, 16(%rbp)	 #, start_ptr
	je	.L18	 #,
	jmp	.L19	 #
.L22:
	movq	16(%rbp), %rax	 # start_ptr, tmp131
	movq	(%rax), %rax	 # *start_ptr_2(D), D.4403
	movq	32(%rax), %rax	 # D.4403_5->right, D.4404
	testq	%rax, %rax	 # D.4404
	jne	.L20	 #,
	movq	16(%rbp), %rax	 # start_ptr, tmp132
	movq	$0, (%rax)	 #, *start_ptr_2(D)
	jmp	.L16	 #
.L20:
	movq	16(%rbp), %rax	 # start_ptr, tmp133
	movq	(%rax), %rax	 # *start_ptr_2(D), D.4407
	movq	32(%rax), %rdx	 # D.4407_7->right, D.4408
	movq	16(%rbp), %rax	 # start_ptr, tmp134
	movq	%rdx, (%rax)	 # D.4408, *start_ptr_2(D)
.L19:
	movq	16(%rbp), %rax	 # start_ptr, tmp135
	movq	(%rax), %rax	 # *start_ptr_2(D), D.4409
	movl	12(%rax), %eax	 # D.4409_3->key, D.4410
	cmpl	40(%rbp), %eax	 # key, D.4410
	jne	.L22	 #,
.L18:
	cmpq	$0, 16(%rbp)	 #, start_ptr
	je	.L23	 #,
	jmp	.L24	 #
.L26:
	movq	16(%rbp), %rax	 # start_ptr, tmp136
	movq	(%rax), %rax	 # *start_ptr_2(D), D.4413
	movq	32(%rax), %rax	 # D.4413_12->right, D.4414
	testq	%rax, %rax	 # D.4414
	jne	.L25	 #,
	movq	16(%rbp), %rax	 # start_ptr, tmp137
	movq	$0, (%rax)	 #, *start_ptr_2(D)
	jmp	.L16	 #
.L25:
	movq	16(%rbp), %rax	 # start_ptr, tmp138
	movq	(%rax), %rax	 # *start_ptr_2(D), D.4417
	movq	32(%rax), %rdx	 # D.4417_14->right, D.4418
	movq	16(%rbp), %rax	 # start_ptr, tmp139
	movq	%rdx, (%rax)	 # D.4418, *start_ptr_2(D)
.L24:
	movq	16(%rbp), %rax	 # start_ptr, tmp140
	movq	(%rax), %rax	 # *start_ptr_2(D), D.4419
	movl	(%rax), %eax	 # D.4419_9->row, D.4420
	cmpl	24(%rbp), %eax	 # row, D.4420
	jne	.L26	 #,
.L23:
	cmpq	$0, 16(%rbp)	 #, start_ptr
	je	.L16	 #,
	jmp	.L27	 #
.L29:
	movq	16(%rbp), %rax	 # start_ptr, tmp141
	movq	(%rax), %rax	 # *start_ptr_2(D), D.4423
	movq	32(%rax), %rax	 # D.4423_19->right, D.4424
	testq	%rax, %rax	 # D.4424
	jne	.L28	 #,
	movq	16(%rbp), %rax	 # start_ptr, tmp142
	movq	$0, (%rax)	 #, *start_ptr_2(D)
	jmp	.L16	 #
.L28:
	movq	16(%rbp), %rax	 # start_ptr, tmp143
	movq	(%rax), %rax	 # *start_ptr_2(D), D.4427
	movq	32(%rax), %rdx	 # D.4427_21->right, D.4428
	movq	16(%rbp), %rax	 # start_ptr, tmp144
	movq	%rdx, (%rax)	 # D.4428, *start_ptr_2(D)
.L27:
	movq	16(%rbp), %rax	 # start_ptr, tmp145
	movq	(%rax), %rax	 # *start_ptr_2(D), D.4429
	movl	4(%rax), %eax	 # D.4429_16->col, D.4430
	cmpl	32(%rbp), %eax	 # col, D.4430
	jne	.L29	 #,
	jmp	.L16	 #
.L17:
	cmpl	$1, 40(%rbp)	 #, key
	jne	.L30	 #,
	cmpq	$0, 16(%rbp)	 #, start_ptr
	je	.L31	 #,
	jmp	.L32	 #
.L34:
	movq	16(%rbp), %rax	 # start_ptr, tmp146
	movq	(%rax), %rax	 # *start_ptr_2(D), D.4436
	movq	32(%rax), %rax	 # D.4436_25->right, D.4437
	testq	%rax, %rax	 # D.4437
	jne	.L33	 #,
	movq	16(%rbp), %rax	 # start_ptr, tmp147
	movq	$0, (%rax)	 #, *start_ptr_2(D)
	jmp	.L16	 #
.L33:
	movq	16(%rbp), %rax	 # start_ptr, tmp148
	movq	(%rax), %rax	 # *start_ptr_2(D), D.4440
	movq	32(%rax), %rdx	 # D.4440_27->right, D.4441
	movq	16(%rbp), %rax	 # start_ptr, tmp149
	movq	%rdx, (%rax)	 # D.4441, *start_ptr_2(D)
.L32:
	movq	16(%rbp), %rax	 # start_ptr, tmp150
	movq	(%rax), %rax	 # *start_ptr_2(D), D.4442
	movl	12(%rax), %eax	 # D.4442_23->key, D.4443
	cmpl	40(%rbp), %eax	 # key, D.4443
	jne	.L34	 #,
.L31:
	cmpq	$0, 16(%rbp)	 #, start_ptr
	je	.L35	 #,
	jmp	.L36	 #
.L38:
	movq	16(%rbp), %rax	 # start_ptr, tmp151
	movq	(%rax), %rax	 # *start_ptr_2(D), D.4446
	movq	32(%rax), %rax	 # D.4446_31->right, D.4447
	testq	%rax, %rax	 # D.4447
	jne	.L37	 #,
	movq	16(%rbp), %rax	 # start_ptr, tmp152
	movq	$0, (%rax)	 #, *start_ptr_2(D)
	jmp	.L16	 #
.L37:
	movq	16(%rbp), %rax	 # start_ptr, tmp153
	movq	(%rax), %rax	 # *start_ptr_2(D), D.4450
	movq	32(%rax), %rdx	 # D.4450_33->right, D.4451
	movq	16(%rbp), %rax	 # start_ptr, tmp154
	movq	%rdx, (%rax)	 # D.4451, *start_ptr_2(D)
.L36:
	movq	16(%rbp), %rax	 # start_ptr, tmp155
	movq	(%rax), %rax	 # *start_ptr_2(D), D.4452
	movl	(%rax), %eax	 # D.4452_29->row, D.4453
	cmpl	24(%rbp), %eax	 # row, D.4453
	jne	.L38	 #,
.L35:
	cmpq	$0, 16(%rbp)	 #, start_ptr
	je	.L16	 #,
	jmp	.L39	 #
.L41:
	movq	16(%rbp), %rax	 # start_ptr, tmp156
	movq	(%rax), %rax	 # *start_ptr_2(D), D.4456
	movq	32(%rax), %rax	 # D.4456_38->right, D.4457
	testq	%rax, %rax	 # D.4457
	jne	.L40	 #,
	movq	16(%rbp), %rax	 # start_ptr, tmp157
	movq	$0, (%rax)	 #, *start_ptr_2(D)
	jmp	.L16	 #
.L40:
	movq	16(%rbp), %rax	 # start_ptr, tmp158
	movq	(%rax), %rax	 # *start_ptr_2(D), D.4460
	movq	32(%rax), %rdx	 # D.4460_40->right, D.4461
	movq	16(%rbp), %rax	 # start_ptr, tmp159
	movq	%rdx, (%rax)	 # D.4461, *start_ptr_2(D)
.L39:
	movq	16(%rbp), %rax	 # start_ptr, tmp160
	movq	(%rax), %rax	 # *start_ptr_2(D), D.4462
	movl	16(%rax), %eax	 # D.4462_35->numb, D.4463
	cmpl	56(%rbp), %eax	 # numb, D.4463
	jne	.L41	 #,
	jmp	.L16	 #
.L30:
	cmpl	$2, 40(%rbp)	 #, key
	jne	.L42	 #,
	cmpq	$0, 16(%rbp)	 #, start_ptr
	je	.L43	 #,
	jmp	.L44	 #
.L46:
	movq	16(%rbp), %rax	 # start_ptr, tmp161
	movq	(%rax), %rax	 # *start_ptr_2(D), D.4469
	movq	32(%rax), %rax	 # D.4469_44->right, D.4470
	testq	%rax, %rax	 # D.4470
	jne	.L45	 #,
	movq	16(%rbp), %rax	 # start_ptr, tmp162
	movq	$0, (%rax)	 #, *start_ptr_2(D)
	jmp	.L16	 #
.L45:
	movq	16(%rbp), %rax	 # start_ptr, tmp163
	movq	(%rax), %rax	 # *start_ptr_2(D), D.4473
	movq	32(%rax), %rdx	 # D.4473_46->right, D.4474
	movq	16(%rbp), %rax	 # start_ptr, tmp164
	movq	%rdx, (%rax)	 # D.4474, *start_ptr_2(D)
.L44:
	movq	16(%rbp), %rax	 # start_ptr, tmp165
	movq	(%rax), %rax	 # *start_ptr_2(D), D.4475
	movl	12(%rax), %eax	 # D.4475_42->key, D.4476
	cmpl	40(%rbp), %eax	 # key, D.4476
	jne	.L46	 #,
.L43:
	cmpq	$0, 16(%rbp)	 #, start_ptr
	je	.L47	 #,
	jmp	.L48	 #
.L50:
	movq	16(%rbp), %rax	 # start_ptr, tmp166
	movq	(%rax), %rax	 # *start_ptr_2(D), D.4479
	movq	32(%rax), %rax	 # D.4479_50->right, D.4480
	testq	%rax, %rax	 # D.4480
	jne	.L49	 #,
	movq	16(%rbp), %rax	 # start_ptr, tmp167
	movq	$0, (%rax)	 #, *start_ptr_2(D)
	jmp	.L16	 #
.L49:
	movq	16(%rbp), %rax	 # start_ptr, tmp168
	movq	(%rax), %rax	 # *start_ptr_2(D), D.4483
	movq	32(%rax), %rdx	 # D.4483_52->right, D.4484
	movq	16(%rbp), %rax	 # start_ptr, tmp169
	movq	%rdx, (%rax)	 # D.4484, *start_ptr_2(D)
.L48:
	movq	16(%rbp), %rax	 # start_ptr, tmp170
	movq	(%rax), %rax	 # *start_ptr_2(D), D.4485
	movl	4(%rax), %eax	 # D.4485_48->col, D.4486
	cmpl	32(%rbp), %eax	 # col, D.4486
	jne	.L50	 #,
.L47:
	cmpq	$0, 16(%rbp)	 #, start_ptr
	je	.L16	 #,
	jmp	.L51	 #
.L53:
	movq	16(%rbp), %rax	 # start_ptr, tmp171
	movq	(%rax), %rax	 # *start_ptr_2(D), D.4489
	movq	32(%rax), %rax	 # D.4489_56->right, D.4490
	testq	%rax, %rax	 # D.4490
	jne	.L52	 #,
	movq	16(%rbp), %rax	 # start_ptr, tmp172
	movq	$0, (%rax)	 #, *start_ptr_2(D)
	jmp	.L16	 #
.L52:
	movq	16(%rbp), %rax	 # start_ptr, tmp173
	movq	(%rax), %rax	 # *start_ptr_2(D), D.4493
	movq	32(%rax), %rdx	 # D.4493_58->right, D.4494
	movq	16(%rbp), %rax	 # start_ptr, tmp174
	movq	%rdx, (%rax)	 # D.4494, *start_ptr_2(D)
.L51:
	movq	16(%rbp), %rax	 # start_ptr, tmp175
	movq	(%rax), %rax	 # *start_ptr_2(D), D.4495
	movl	16(%rax), %eax	 # D.4495_54->numb, D.4496
	cmpl	56(%rbp), %eax	 # numb, D.4496
	jne	.L53	 #,
	jmp	.L16	 #
.L42:
	cmpl	$3, 40(%rbp)	 #, key
	jne	.L16	 #,
	cmpq	$0, 16(%rbp)	 #, start_ptr
	je	.L54	 #,
	jmp	.L55	 #
.L57:
	movq	16(%rbp), %rax	 # start_ptr, tmp176
	movq	(%rax), %rax	 # *start_ptr_2(D), D.4502
	movq	32(%rax), %rax	 # D.4502_62->right, D.4503
	testq	%rax, %rax	 # D.4503
	jne	.L56	 #,
	movq	16(%rbp), %rax	 # start_ptr, tmp177
	movq	$0, (%rax)	 #, *start_ptr_2(D)
	jmp	.L16	 #
.L56:
	movq	16(%rbp), %rax	 # start_ptr, tmp178
	movq	(%rax), %rax	 # *start_ptr_2(D), D.4506
	movq	32(%rax), %rdx	 # D.4506_64->right, D.4507
	movq	16(%rbp), %rax	 # start_ptr, tmp179
	movq	%rdx, (%rax)	 # D.4507, *start_ptr_2(D)
.L55:
	movq	16(%rbp), %rax	 # start_ptr, tmp180
	movq	(%rax), %rax	 # *start_ptr_2(D), D.4508
	movl	12(%rax), %eax	 # D.4508_60->key, D.4509
	cmpl	40(%rbp), %eax	 # key, D.4509
	jne	.L57	 #,
.L54:
	cmpq	$0, 16(%rbp)	 #, start_ptr
	je	.L58	 #,
	jmp	.L59	 #
.L61:
	movq	16(%rbp), %rax	 # start_ptr, tmp181
	movq	(%rax), %rax	 # *start_ptr_2(D), D.4512
	movq	32(%rax), %rax	 # D.4512_69->right, D.4513
	testq	%rax, %rax	 # D.4513
	jne	.L60	 #,
	movq	16(%rbp), %rax	 # start_ptr, tmp182
	movq	$0, (%rax)	 #, *start_ptr_2(D)
	jmp	.L16	 #
.L60:
	movq	16(%rbp), %rax	 # start_ptr, tmp183
	movq	(%rax), %rax	 # *start_ptr_2(D), D.4516
	movq	32(%rax), %rdx	 # D.4516_71->right, D.4517
	movq	16(%rbp), %rax	 # start_ptr, tmp184
	movq	%rdx, (%rax)	 # D.4517, *start_ptr_2(D)
.L59:
	movq	16(%rbp), %rax	 # start_ptr, tmp185
	movq	(%rax), %rax	 # *start_ptr_2(D), D.4518
	movl	8(%rax), %eax	 # D.4518_66->quad, D.4519
	cmpl	48(%rbp), %eax	 # quad, D.4519
	jne	.L61	 #,
.L58:
	cmpq	$0, 16(%rbp)	 #, start_ptr
	je	.L16	 #,
	jmp	.L62	 #
.L64:
	movq	16(%rbp), %rax	 # start_ptr, tmp186
	movq	(%rax), %rax	 # *start_ptr_2(D), D.4522
	movq	32(%rax), %rax	 # D.4522_75->right, D.4523
	testq	%rax, %rax	 # D.4523
	jne	.L63	 #,
	movq	16(%rbp), %rax	 # start_ptr, tmp187
	movq	$0, (%rax)	 #, *start_ptr_2(D)
	jmp	.L16	 #
.L63:
	movq	16(%rbp), %rax	 # start_ptr, tmp188
	movq	(%rax), %rax	 # *start_ptr_2(D), D.4526
	movq	32(%rax), %rdx	 # D.4526_77->right, D.4527
	movq	16(%rbp), %rax	 # start_ptr, tmp189
	movq	%rdx, (%rax)	 # D.4527, *start_ptr_2(D)
.L62:
	movq	16(%rbp), %rax	 # start_ptr, tmp190
	movq	(%rax), %rax	 # *start_ptr_2(D), D.4528
	movl	16(%rax), %eax	 # D.4528_73->numb, D.4529
	cmpl	56(%rbp), %eax	 # numb, D.4529
	jne	.L64	 #,
.L16:
	popq	%rbp	 #
	ret
	.seh_endproc
	.globl	movecol
	.def	movecol;	.scl	2;	.type	32;	.endef
	.seh_proc	movecol
movecol:
	pushq	%rbp	 #
	.seh_pushreg	%rbp
	movq	%rsp, %rbp	 #,
	subq	$96, %rsp	 #,
	.seh_stackalloc	96
	.seh_setframe	%rbp, 96
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # start_ptr, start_ptr
	movl	%edx, 24(%rbp)	 # row, row
	movl	%r8d, 32(%rbp)	 # col, col
	movl	%r9d, 40(%rbp)	 # quad, quad
	movq	$0, -8(%rbp)	 #, temp_ptr
	movq	$0, -16(%rbp)	 #, add_ptr
	movq	$0, -32(%rbp)	 #, new_ptr
	movl	$0, -36(%rbp)	 #, i
	movl	$0, -20(%rbp)	 #, key
	movl	$0, -40(%rbp)	 #, n
	movq	16(%rbp), %rax	 # start_ptr, tmp103
	movq	(%rax), %rax	 # *start_ptr_11(D), D.4328
	movq	24(%rax), %rax	 # D.4328_12->left, D.4329
	testq	%rax, %rax	 # D.4329
	jne	.L69	 #,
	movq	16(%rbp), %rax	 # start_ptr, tmp104
	movq	(%rax), %rax	 # *start_ptr_11(D), D.4331
	movq	32(%rax), %rax	 # D.4331_14->right, D.4332
	testq	%rax, %rax	 # D.4332
	jne	.L69	 #,
	cmpl	$1, 64(%rbp)	 #, check
	jne	.L67	 #,
	movq	16(%rbp), %rax	 # start_ptr, tmp105
	movq	(%rax), %rdx	 # *start_ptr_11(D), D.4336
	movq	56(%rbp), %rax	 # point, tmp106
	movq	%rax, %rcx	 # tmp106,
	call	push	 #
.L67:
	movq	16(%rbp), %rax	 # start_ptr, tmp107
	movq	$0, (%rax)	 #, *start_ptr_11(D)
	jmp	.L65	 #
.L87:
	movq	16(%rbp), %rax	 # start_ptr, tmp108
	movq	(%rax), %rax	 # *start_ptr_11(D), D.4337
	testq	%rax, %rax	 # D.4337
	je	.L92	 #,
.L70:
	movl	-20(%rbp), %r8d	 # key, tmp109
	movl	32(%rbp), %ecx	 # col, tmp110
	movl	24(%rbp), %eax	 # row, tmp111
	movl	48(%rbp), %edx	 # num, tmp112
	movl	%edx, 40(%rsp)	 # tmp112,
	movl	40(%rbp), %edx	 # quad, tmp113
	movl	%edx, 32(%rsp)	 # tmp113,
	movl	%r8d, %r9d	 # tmp109,
	movl	%ecx, %r8d	 # tmp110,
	movl	%eax, %edx	 # tmp111,
	movq	16(%rbp), %rcx	 # start_ptr,
	call	findcol	 #
	movq	16(%rbp), %rax	 # start_ptr, tmp114
	movq	(%rax), %rax	 # *start_ptr_11(D), D.4340
	testq	%rax, %rax	 # D.4340
	je	.L72	 #,
	movq	16(%rbp), %rax	 # start_ptr, tmp115
	movq	(%rax), %rax	 # *start_ptr_11(D), tmp116
	movq	%rax, -8(%rbp)	 # tmp116, temp_ptr
	cmpl	$1, 64(%rbp)	 #, check
	jne	.L73	 #,
	movq	16(%rbp), %rax	 # start_ptr, tmp117
	movq	(%rax), %rdx	 # *start_ptr_11(D), D.4345
	movq	56(%rbp), %rax	 # point, tmp118
	movq	%rax, %rcx	 # tmp118,
	call	push	 #
.L73:
	movq	16(%rbp), %rax	 # start_ptr, tmp119
	movq	(%rax), %rax	 # *start_ptr_11(D), D.4348
	movq	24(%rax), %rax	 # D.4348_27->left, D.4349
	testq	%rax, %rax	 # D.4349
	jne	.L74	 #,
	movq	16(%rbp), %rax	 # start_ptr, tmp120
	movq	(%rax), %rax	 # *start_ptr_11(D), D.4351
	movq	32(%rax), %rax	 # D.4351_29->right, D.4352
	testq	%rax, %rax	 # D.4352
	jne	.L74	 #,
	movq	16(%rbp), %rax	 # start_ptr, tmp121
	movq	$0, (%rax)	 #, *start_ptr_11(D)
	jmp	.L75	 #
.L74:
	movq	16(%rbp), %rax	 # start_ptr, tmp122
	movq	(%rax), %rax	 # *start_ptr_11(D), D.4354
	movq	24(%rax), %rax	 # D.4354_31->left, D.4355
	testq	%rax, %rax	 # D.4355
	jne	.L76	 #,
	movq	16(%rbp), %rax	 # start_ptr, tmp123
	movq	(%rax), %rax	 # *start_ptr_11(D), D.4358
	movq	32(%rax), %rax	 # D.4358_33->right, D.4359
	movq	$0, 24(%rax)	 #, D.4359_34->left
	jmp	.L75	 #
.L76:
	movq	16(%rbp), %rax	 # start_ptr, tmp124
	movq	(%rax), %rax	 # *start_ptr_11(D), D.4361
	movq	32(%rax), %rax	 # D.4361_35->right, D.4362
	testq	%rax, %rax	 # D.4362
	jne	.L77	 #,
	movq	16(%rbp), %rax	 # start_ptr, tmp125
	movq	(%rax), %rax	 # *start_ptr_11(D), D.4365
	movq	24(%rax), %rax	 # D.4365_37->left, D.4366
	movq	$0, 32(%rax)	 #, D.4366_38->right
	jmp	.L75	 #
.L77:
	movq	16(%rbp), %rax	 # start_ptr, tmp126
	movq	(%rax), %rax	 # *start_ptr_11(D), D.4368
	movq	32(%rax), %rax	 # D.4368_39->right, D.4369
	movq	16(%rbp), %rdx	 # start_ptr, tmp127
	movq	(%rdx), %rdx	 # *start_ptr_11(D), D.4370
	movq	24(%rdx), %rdx	 # D.4370_41->left, D.4371
	movq	%rdx, 24(%rax)	 # D.4371, D.4369_40->left
	movq	16(%rbp), %rax	 # start_ptr, tmp128
	movq	(%rax), %rax	 # *start_ptr_11(D), D.4372
	movq	24(%rax), %rax	 # D.4372_43->left, D.4373
	movq	16(%rbp), %rdx	 # start_ptr, tmp129
	movq	(%rdx), %rdx	 # *start_ptr_11(D), D.4374
	movq	32(%rdx), %rdx	 # D.4374_45->right, D.4375
	movq	%rdx, 32(%rax)	 # D.4375, D.4373_44->right
.L75:
	movq	-8(%rbp), %rax	 # temp_ptr, tmp130
	movq	48(%rax), %rax	 # temp_ptr_25->down, tmp131
	movq	%rax, -8(%rbp)	 # tmp131, temp_ptr
	jmp	.L78	 #
.L86:
	movq	-8(%rbp), %rax	 # temp_ptr, tmp132
	movq	%rax, -16(%rbp)	 # tmp132, add_ptr
	jmp	.L79	 #
.L80:
	movq	-16(%rbp), %rax	 # add_ptr, tmp133
	movq	24(%rax), %rax	 # add_ptr_2->left, tmp134
	movq	%rax, -16(%rbp)	 # tmp134, add_ptr
.L79:
	movq	-16(%rbp), %rax	 # add_ptr, tmp135
	movq	24(%rax), %rax	 # add_ptr_2->left, D.4376
	testq	%rax, %rax	 # D.4376
	jne	.L80	 #,
	jmp	.L81	 #
.L85:
	cmpl	$1, 64(%rbp)	 #, check
	jne	.L82	 #,
	movq	-16(%rbp), %rdx	 # add_ptr, tmp136
	movq	56(%rbp), %rax	 # point, tmp137
	movq	%rax, %rcx	 # tmp137,
	call	push	 #
.L82:
	movq	-16(%rbp), %rax	 # add_ptr, tmp138
	movq	48(%rax), %rax	 # add_ptr_3->down, D.4379
	testq	%rax, %rax	 # D.4379
	jne	.L83	 #,
	movq	-16(%rbp), %rax	 # add_ptr, tmp139
	movq	40(%rax), %rax	 # add_ptr_3->up, D.4382
	movq	$0, 48(%rax)	 #, D.4382_52->down
	jmp	.L84	 #
.L83:
	movq	-16(%rbp), %rax	 # add_ptr, tmp140
	movq	48(%rax), %rax	 # add_ptr_3->down, D.4384
	movq	-16(%rbp), %rdx	 # add_ptr, tmp141
	movq	40(%rdx), %rdx	 # add_ptr_3->up, D.4385
	movq	%rdx, 40(%rax)	 # D.4385, D.4384_53->up
	movq	-16(%rbp), %rax	 # add_ptr, tmp142
	movq	40(%rax), %rax	 # add_ptr_3->up, D.4386
	movq	-16(%rbp), %rdx	 # add_ptr, tmp143
	movq	48(%rdx), %rdx	 # add_ptr_3->down, D.4387
	movq	%rdx, 48(%rax)	 # D.4387, D.4386_55->down
.L84:
	movq	-16(%rbp), %rax	 # add_ptr, tmp144
	movq	32(%rax), %rax	 # add_ptr_3->right, tmp145
	movq	%rax, -16(%rbp)	 # tmp145, add_ptr
.L81:
	cmpq	$0, -16(%rbp)	 #, add_ptr
	jne	.L85	 #,
	movq	-8(%rbp), %rax	 # temp_ptr, tmp146
	movq	48(%rax), %rax	 # temp_ptr_1->down, tmp147
	movq	%rax, -8(%rbp)	 # tmp147, temp_ptr
.L78:
	cmpq	$0, -8(%rbp)	 #, temp_ptr
	jne	.L86	 #,
.L72:
	addl	$1, -20(%rbp)	 #, key
.L69:
	cmpl	$3, -20(%rbp)	 #, key
	jle	.L87	 #,
	jmp	.L71	 #
.L92:
	nop
.L71:
	movq	16(%rbp), %rax	 # start_ptr, tmp148
	movq	(%rax), %rax	 # *start_ptr_11(D), D.4388
	testq	%rax, %rax	 # D.4388
	je	.L65	 #,
	jmp	.L88	 #
.L89:
	movq	16(%rbp), %rax	 # start_ptr, tmp149
	movq	(%rax), %rax	 # *start_ptr_11(D), D.4391
	movq	40(%rax), %rdx	 # D.4391_63->up, D.4392
	movq	16(%rbp), %rax	 # start_ptr, tmp150
	movq	%rdx, (%rax)	 # D.4392, *start_ptr_11(D)
.L88:
	movq	16(%rbp), %rax	 # start_ptr, tmp151
	movq	(%rax), %rax	 # *start_ptr_11(D), D.4393
	movq	40(%rax), %rax	 # D.4393_61->up, D.4394
	testq	%rax, %rax	 # D.4394
	jne	.L89	 #,
	jmp	.L90	 #
.L91:
	movq	16(%rbp), %rax	 # start_ptr, tmp152
	movq	(%rax), %rax	 # *start_ptr_11(D), D.4395
	movq	24(%rax), %rdx	 # D.4395_67->left, D.4396
	movq	16(%rbp), %rax	 # start_ptr, tmp153
	movq	%rdx, (%rax)	 # D.4396, *start_ptr_11(D)
.L90:
	movq	16(%rbp), %rax	 # start_ptr, tmp154
	movq	(%rax), %rax	 # *start_ptr_11(D), D.4397
	movq	24(%rax), %rax	 # D.4397_65->left, D.4398
	testq	%rax, %rax	 # D.4398
	jne	.L91	 #,
.L65:
	addq	$96, %rsp	 #,
	popq	%rbp	 #
	ret
	.seh_endproc
	.globl	removecol
	.def	removecol;	.scl	2;	.type	32;	.endef
	.seh_proc	removecol
removecol:
	pushq	%rbp	 #
	.seh_pushreg	%rbp
	movq	%rsp, %rbp	 #,
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_setframe	%rbp, 32
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # start_ptr_list, start_ptr_list
	jmp	.L94	 #
.L99:
	movq	16(%rbp), %rax	 # start_ptr_list, tmp92
	movq	(%rax), %rax	 # *start_ptr_list_1(D), D.4285
	movq	(%rax), %rax	 # D.4285_3->ptr, D.4286
	movq	48(%rax), %rax	 # D.4286_4->down, D.4287
	testq	%rax, %rax	 # D.4287
	je	.L95	 #,
	movq	16(%rbp), %rax	 # start_ptr_list, tmp93
	movq	(%rax), %rax	 # *start_ptr_list_1(D), D.4290
	movq	(%rax), %rax	 # D.4290_6->ptr, D.4291
	movq	48(%rax), %rax	 # D.4291_7->down, D.4292
	movq	16(%rbp), %rdx	 # start_ptr_list, tmp94
	movq	(%rdx), %rdx	 # *start_ptr_list_1(D), D.4293
	movq	(%rdx), %rdx	 # D.4293_9->ptr, D.4294
	movq	%rdx, 40(%rax)	 # D.4294, D.4292_8->up
.L95:
	movq	16(%rbp), %rax	 # start_ptr_list, tmp95
	movq	(%rax), %rax	 # *start_ptr_list_1(D), D.4295
	movq	(%rax), %rax	 # D.4295_11->ptr, D.4296
	movq	40(%rax), %rax	 # D.4296_12->up, D.4297
	testq	%rax, %rax	 # D.4297
	je	.L96	 #,
	movq	16(%rbp), %rax	 # start_ptr_list, tmp96
	movq	(%rax), %rax	 # *start_ptr_list_1(D), D.4300
	movq	(%rax), %rax	 # D.4300_14->ptr, D.4301
	movq	40(%rax), %rax	 # D.4301_15->up, D.4302
	movq	16(%rbp), %rdx	 # start_ptr_list, tmp97
	movq	(%rdx), %rdx	 # *start_ptr_list_1(D), D.4303
	movq	(%rdx), %rdx	 # D.4303_17->ptr, D.4304
	movq	%rdx, 48(%rax)	 # D.4304, D.4302_16->down
.L96:
	movq	16(%rbp), %rax	 # start_ptr_list, tmp98
	movq	(%rax), %rax	 # *start_ptr_list_1(D), D.4305
	movq	(%rax), %rax	 # D.4305_19->ptr, D.4306
	movq	24(%rax), %rax	 # D.4306_20->left, D.4307
	testq	%rax, %rax	 # D.4307
	je	.L97	 #,
	movq	16(%rbp), %rax	 # start_ptr_list, tmp99
	movq	(%rax), %rax	 # *start_ptr_list_1(D), D.4310
	movq	(%rax), %rax	 # D.4310_22->ptr, D.4311
	movq	24(%rax), %rax	 # D.4311_23->left, D.4312
	movq	16(%rbp), %rdx	 # start_ptr_list, tmp100
	movq	(%rdx), %rdx	 # *start_ptr_list_1(D), D.4313
	movq	(%rdx), %rdx	 # D.4313_25->ptr, D.4314
	movq	%rdx, 32(%rax)	 # D.4314, D.4312_24->right
.L97:
	movq	16(%rbp), %rax	 # start_ptr_list, tmp101
	movq	(%rax), %rax	 # *start_ptr_list_1(D), D.4315
	movq	(%rax), %rax	 # D.4315_27->ptr, D.4316
	movq	32(%rax), %rax	 # D.4316_28->right, D.4317
	testq	%rax, %rax	 # D.4317
	je	.L98	 #,
	movq	16(%rbp), %rax	 # start_ptr_list, tmp102
	movq	(%rax), %rax	 # *start_ptr_list_1(D), D.4320
	movq	(%rax), %rax	 # D.4320_30->ptr, D.4321
	movq	32(%rax), %rax	 # D.4321_31->right, D.4322
	movq	16(%rbp), %rdx	 # start_ptr_list, tmp103
	movq	(%rdx), %rdx	 # *start_ptr_list_1(D), D.4323
	movq	(%rdx), %rdx	 # D.4323_33->ptr, D.4324
	movq	%rdx, 24(%rax)	 # D.4324, D.4322_32->left
.L98:
	movq	16(%rbp), %rcx	 # start_ptr_list,
	call	pop	 #
.L94:
	movq	16(%rbp), %rax	 # start_ptr_list, tmp104
	movq	(%rax), %rax	 # *start_ptr_list_1(D), D.4325
	testq	%rax, %rax	 # D.4325
	jne	.L99	 #,
	addq	$32, %rsp	 #,
	popq	%rbp	 #
	ret
	.seh_endproc
	.globl	dance
	.def	dance;	.scl	2;	.type	32;	.endef
	.seh_proc	dance
dance:
	pushq	%rbp	 #
	.seh_pushreg	%rbp
	movq	%rsp, %rbp	 #,
	subq	$112, %rsp	 #,
	.seh_stackalloc	112
	.seh_setframe	%rbp, 112
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # ptr, ptr
	movl	%edx, 24(%rbp)	 # as, as
	movq	%r8, 32(%rbp)	 # matr, matr
	movq	$0, -40(%rbp)	 #, stack
	movq	16(%rbp), %rax	 # ptr, tmp83
	movq	%rax, -8(%rbp)	 # tmp83, temp_ptr
	movq	16(%rbp), %rax	 # ptr, tmp84
	movq	%rax, -16(%rbp)	 # tmp84, add_ptr
	movl	$0, -20(%rbp)	 #, i
	movl	$0, -24(%rbp)	 #, j
	movl	$0, -28(%rbp)	 #, k
	movq	16(%rbp), %rax	 # ptr, ptr.57
	testq	%rax, %rax	 # ptr.57
	jne	.L104	 #,
	cmpl	$1, 24(%rbp)	 #, as
	jne	.L102	 #,
	movl	$1, %eax	 #, D.4257
	jmp	.L114	 #
.L102:
	movl	$0, %eax	 #, D.4257
	jmp	.L114	 #
.L106:
	movq	-16(%rbp), %rax	 # add_ptr, tmp85
	movq	48(%rax), %rax	 # add_ptr_2->down, D.4258
	testq	%rax, %rax	 # D.4258
	jne	.L105	 #,
	movl	$1, %eax	 #, D.4257
	jmp	.L114	 #
.L105:
	movq	-16(%rbp), %rax	 # add_ptr, tmp86
	movq	32(%rax), %rax	 # add_ptr_2->right, tmp87
	movq	%rax, -16(%rbp)	 # tmp87, add_ptr
.L104:
	cmpq	$0, -16(%rbp)	 #, add_ptr
	jne	.L106	 #,
	jmp	.L107	 #
.L108:
	movq	16(%rbp), %rax	 # ptr, ptr.58
	movq	24(%rax), %rax	 # ptr.58_18->left, ptr.59
	movq	%rax, 16(%rbp)	 # ptr.59, ptr
.L107:
	movq	16(%rbp), %rax	 # ptr, ptr.60
	movq	24(%rax), %rax	 # ptr.60_16->left, D.4264
	testq	%rax, %rax	 # D.4264
	jne	.L108	 #,
	leaq	16(%rbp), %rcx	 #,
	call	minimal	 #
	movq	16(%rbp), %rax	 # ptr, ptr.61
	movq	48(%rax), %rax	 # ptr.61_20->down, tmp88
	movq	%rax, -8(%rbp)	 # tmp88, temp_ptr
	jmp	.L109	 #
.L113:
	movq	-8(%rbp), %rax	 # temp_ptr, tmp89
	movl	(%rax), %eax	 # temp_ptr_1->row, tmp90
	movl	%eax, -20(%rbp)	 # tmp90, i
	movq	-8(%rbp), %rax	 # temp_ptr, tmp91
	movl	4(%rax), %eax	 # temp_ptr_1->col, tmp92
	movl	%eax, -24(%rbp)	 # tmp92, j
	movq	-8(%rbp), %rax	 # temp_ptr, tmp93
	movl	16(%rax), %eax	 # temp_ptr_1->numb, tmp94
	movl	%eax, -28(%rbp)	 # tmp94, k
	movl	-20(%rbp), %eax	 # i, tmp95
	cltq
	movq	%rax, %rdx	 # D.4266, D.4267
	salq	$6, %rdx	 #, D.4267
	movq	32(%rbp), %rax	 # matr, tmp96
	leaq	(%rdx,%rax), %rcx	 #, D.4268
	movl	-24(%rbp), %eax	 # j, tmp98
	cltq
	movl	-28(%rbp), %edx	 # k, tmp99
	movl	%edx, (%rcx,%rax,4)	 # tmp99, *D.4268_28
	movq	16(%rbp), %rax	 # ptr, ptr.62
	movl	8(%rax), %r8d	 # ptr.62_29->quad, D.4270
	movl	-24(%rbp), %ecx	 # j, tmp100
	movl	-20(%rbp), %eax	 # i, tmp101
	movl	$1, 48(%rsp)	 #,
	leaq	-40(%rbp), %rdx	 #, tmp102
	movq	%rdx, 40(%rsp)	 # tmp102,
	movl	-28(%rbp), %edx	 # k, tmp103
	movl	%edx, 32(%rsp)	 # tmp103,
	movl	%r8d, %r9d	 # D.4270,
	movl	%ecx, %r8d	 # tmp100,
	movl	%eax, %edx	 # tmp101,
	leaq	16(%rbp), %rcx	 #,
	call	movecol	 #
	movl	24(%rbp), %eax	 # as, tmp104
	leal	1(%rax), %edx	 #, D.4271
	movq	16(%rbp), %rax	 # ptr, ptr.63
	movq	32(%rbp), %rcx	 # matr, tmp105
	movq	%rcx, %r8	 # tmp105,
	movq	%rax, %rcx	 # ptr.63,
	call	dance	 #
	testl	%eax, %eax	 # D.4273
	jne	.L110	 #,
	movl	$0, %eax	 #, D.4257
	jmp	.L114	 #
.L110:
	movq	-8(%rbp), %rax	 # temp_ptr, tmp106
	movq	48(%rax), %rax	 # temp_ptr_1->down, tmp107
	movq	%rax, -8(%rbp)	 # tmp107, temp_ptr
	movl	-20(%rbp), %eax	 # i, tmp108
	cltq
	movq	%rax, %rdx	 # D.4276, D.4277
	salq	$6, %rdx	 #, D.4277
	movq	32(%rbp), %rax	 # matr, tmp109
	addq	%rax, %rdx	 # tmp109, D.4278
	movl	-24(%rbp), %eax	 # j, tmp111
	cltq
	movl	$0, (%rdx,%rax,4)	 #, *D.4278_38
	leaq	-40(%rbp), %rax	 #, tmp112
	movq	%rax, %rcx	 # tmp112,
	call	removecol	 #
	jmp	.L111	 #
.L112:
	movq	16(%rbp), %rax	 # ptr, ptr.64
	movq	24(%rax), %rax	 # ptr.64_41->left, ptr.65
	movq	%rax, 16(%rbp)	 # ptr.65, ptr
.L111:
	movq	16(%rbp), %rax	 # ptr, ptr.66
	movq	24(%rax), %rax	 # ptr.66_39->left, D.4282
	testq	%rax, %rax	 # D.4282
	jne	.L112	 #,
.L109:
	cmpq	$0, -8(%rbp)	 #, temp_ptr
	jne	.L113	 #,
	movl	$1, %eax	 #, D.4257
.L114:
	addq	$112, %rsp	 #,
	popq	%rbp	 #
	ret
	.seh_endproc
	.globl	begin_X
	.def	begin_X;	.scl	2;	.type	32;	.endef
	.seh_proc	begin_X
begin_X:
	pushq	%rbp	 #
	.seh_pushreg	%rbp
	movq	%rsp, %rbp	 #,
	subq	$160, %rsp	 #,
	.seh_stackalloc	160
	.seh_setframe	%rbp, 160
	.seh_endprologue
	movq	%rcx, 16(%rbp)	 # Matrix, Matrix
	movl	.LC0(%rip), %eax	 #, tmp167
	movl	%eax, -44(%rbp)	 # tmp167, start
	movl	.LC0(%rip), %eax	 #, tmp168
	movl	%eax, -48(%rbp)	 # tmp168, finish
	movl	P(%rip), %edx	 # P, P.6
	movl	P(%rip), %eax	 # P, P.7
	imull	%edx, %eax	 # P.6, tmp169
	movl	%eax, -52(%rbp)	 # tmp169, N
	movq	$0, -72(%rbp)	 #, ptr
	movl	$0, -4(%rbp)	 #, i
	movl	$0, -8(%rbp)	 #, j
	movl	$0, -12(%rbp)	 #, k
	movl	$0, -16(%rbp)	 #, numb
	movl	$1, -56(%rbp)	 #, mode
	movl	$0, -20(%rbp)	 #, quad
	movl	$0, -60(%rbp)	 #, s
	call	clock	 #
	cvtsi2ss	%eax, %xmm0	 # D.4129, tmp170
	movss	%xmm0, -44(%rbp)	 # tmp170, start
	movl	$0, -8(%rbp)	 #, j
	movl	$0, -4(%rbp)	 #, i
	movl	$3, -12(%rbp)	 #, k
	movl	-52(%rbp), %eax	 # N, tmp171
	movl	%eax, -20(%rbp)	 # tmp171, quad
	jmp	.L116	 #
.L119:
	movl	-52(%rbp), %eax	 # N, tmp172
	movl	%eax, -16(%rbp)	 # tmp172, numb
	jmp	.L117	 #
.L118:
	movl	-12(%rbp), %r9d	 # k, tmp173
	movl	-8(%rbp), %r8d	 # j, tmp174
	movl	-4(%rbp), %edx	 # i, tmp175
	leaq	-72(%rbp), %rax	 #, tmp176
	movl	-56(%rbp), %ecx	 # mode, tmp177
	movl	%ecx, 48(%rsp)	 # tmp177,
	movl	-20(%rbp), %ecx	 # quad, tmp178
	movl	%ecx, 40(%rsp)	 # tmp178,
	movl	-16(%rbp), %ecx	 # numb, tmp179
	movl	%ecx, 32(%rsp)	 # tmp179,
	movq	%rax, %rcx	 # tmp176,
	call	in	 #
	subl	$1, -16(%rbp)	 #, numb
.L117:
	cmpl	$0, -16(%rbp)	 #, numb
	jg	.L118	 #,
	subl	$1, -20(%rbp)	 #, quad
.L116:
	cmpl	$0, -20(%rbp)	 #, quad
	jg	.L119	 #,
	movl	$0, -4(%rbp)	 #, i
	movl	$2, -12(%rbp)	 #, k
	movl	-52(%rbp), %eax	 # N, tmp181
	subl	$1, %eax	 #, tmp180
	movl	%eax, -8(%rbp)	 # tmp180, j
	jmp	.L120	 #
.L123:
	movl	-52(%rbp), %eax	 # N, tmp182
	movl	%eax, -16(%rbp)	 # tmp182, numb
	jmp	.L121	 #
.L122:
	movl	P(%rip), %edx	 # P,
	movl	%edx, -84(%rbp)	 #, %sfp
	movl	-4(%rbp), %eax	 # i, tmp185
	movl	%eax, %edx	 # tmp185,
	sarl	$31, %edx	 #,
	idivl	-84(%rbp)	 # %sfp
	movl	%eax, %edx	 # tmp183, D.4131
	movl	P(%rip), %eax	 # P, P.9
	movl	%edx, %ecx	 # D.4131, D.4133
	imull	%eax, %ecx	 # P.9, D.4133
	movl	P(%rip), %edx	 # P,
	movl	%edx, -84(%rbp)	 #, %sfp
	movl	-8(%rbp), %eax	 # j, tmp188
	movl	%eax, %edx	 # tmp188,
	sarl	$31, %edx	 #,
	idivl	-84(%rbp)	 # %sfp
	addl	%ecx, %eax	 # D.4133, D.4136
	addl	$1, %eax	 #, tmp189
	movl	%eax, -20(%rbp)	 # tmp189, quad
	movl	-12(%rbp), %r9d	 # k, tmp190
	movl	-8(%rbp), %r8d	 # j, tmp191
	movl	-4(%rbp), %edx	 # i, tmp192
	leaq	-72(%rbp), %rax	 #, tmp193
	movl	-56(%rbp), %ecx	 # mode, tmp194
	movl	%ecx, 48(%rsp)	 # tmp194,
	movl	-20(%rbp), %ecx	 # quad, tmp195
	movl	%ecx, 40(%rsp)	 # tmp195,
	movl	-16(%rbp), %ecx	 # numb, tmp196
	movl	%ecx, 32(%rsp)	 # tmp196,
	movq	%rax, %rcx	 # tmp193,
	call	in	 #
	subl	$1, -16(%rbp)	 #, numb
.L121:
	cmpl	$0, -16(%rbp)	 #, numb
	jg	.L122	 #,
	subl	$1, -8(%rbp)	 #, j
.L120:
	cmpl	$0, -8(%rbp)	 #, j
	jns	.L123	 #,
	movl	$0, -8(%rbp)	 #, j
	movl	$1, -12(%rbp)	 #, k
	movl	-52(%rbp), %eax	 # N, tmp198
	subl	$1, %eax	 #, tmp197
	movl	%eax, -4(%rbp)	 # tmp197, i
	jmp	.L124	 #
.L127:
	movl	-52(%rbp), %eax	 # N, tmp199
	movl	%eax, -16(%rbp)	 # tmp199, numb
	jmp	.L125	 #
.L126:
	movl	P(%rip), %edx	 # P,
	movl	%edx, -84(%rbp)	 #, %sfp
	movl	-4(%rbp), %eax	 # i, tmp202
	movl	%eax, %edx	 # tmp202,
	sarl	$31, %edx	 #,
	idivl	-84(%rbp)	 # %sfp
	movl	%eax, %edx	 # tmp200, D.4138
	movl	P(%rip), %eax	 # P, P.12
	movl	%edx, %ecx	 # D.4138, D.4140
	imull	%eax, %ecx	 # P.12, D.4140
	movl	P(%rip), %edx	 # P,
	movl	%edx, -84(%rbp)	 #, %sfp
	movl	-8(%rbp), %eax	 # j, tmp205
	movl	%eax, %edx	 # tmp205,
	sarl	$31, %edx	 #,
	idivl	-84(%rbp)	 # %sfp
	addl	%ecx, %eax	 # D.4140, D.4143
	addl	$1, %eax	 #, tmp206
	movl	%eax, -20(%rbp)	 # tmp206, quad
	movl	-12(%rbp), %r9d	 # k, tmp207
	movl	-8(%rbp), %r8d	 # j, tmp208
	movl	-4(%rbp), %edx	 # i, tmp209
	leaq	-72(%rbp), %rax	 #, tmp210
	movl	-56(%rbp), %ecx	 # mode, tmp211
	movl	%ecx, 48(%rsp)	 # tmp211,
	movl	-20(%rbp), %ecx	 # quad, tmp212
	movl	%ecx, 40(%rsp)	 # tmp212,
	movl	-16(%rbp), %ecx	 # numb, tmp213
	movl	%ecx, 32(%rsp)	 # tmp213,
	movq	%rax, %rcx	 # tmp210,
	call	in	 #
	subl	$1, -16(%rbp)	 #, numb
.L125:
	cmpl	$0, -16(%rbp)	 #, numb
	jg	.L126	 #,
	subl	$1, -4(%rbp)	 #, i
.L124:
	cmpl	$0, -4(%rbp)	 #, i
	jns	.L127	 #,
	movl	$0, -12(%rbp)	 #, k
	movl	-52(%rbp), %eax	 # N, tmp215
	subl	$1, %eax	 #, tmp214
	movl	%eax, -4(%rbp)	 # tmp214, i
	jmp	.L128	 #
.L131:
	movl	-52(%rbp), %eax	 # N, tmp217
	subl	$1, %eax	 #, tmp216
	movl	%eax, -8(%rbp)	 # tmp216, j
	jmp	.L129	 #
.L130:
	movl	P(%rip), %edx	 # P,
	movl	%edx, -84(%rbp)	 #, %sfp
	movl	-4(%rbp), %eax	 # i, tmp220
	movl	%eax, %edx	 # tmp220,
	sarl	$31, %edx	 #,
	idivl	-84(%rbp)	 # %sfp
	movl	%eax, %edx	 # tmp218, D.4145
	movl	P(%rip), %eax	 # P, P.15
	movl	%edx, %ecx	 # D.4145, D.4147
	imull	%eax, %ecx	 # P.15, D.4147
	movl	P(%rip), %edx	 # P,
	movl	%edx, -84(%rbp)	 #, %sfp
	movl	-8(%rbp), %eax	 # j, tmp223
	movl	%eax, %edx	 # tmp223,
	sarl	$31, %edx	 #,
	idivl	-84(%rbp)	 # %sfp
	addl	%ecx, %eax	 # D.4147, D.4150
	addl	$1, %eax	 #, tmp224
	movl	%eax, -20(%rbp)	 # tmp224, quad
	movl	-12(%rbp), %r9d	 # k, tmp225
	movl	-8(%rbp), %r8d	 # j, tmp226
	movl	-4(%rbp), %edx	 # i, tmp227
	leaq	-72(%rbp), %rax	 #, tmp228
	movl	-56(%rbp), %ecx	 # mode, tmp229
	movl	%ecx, 48(%rsp)	 # tmp229,
	movl	-20(%rbp), %ecx	 # quad, tmp230
	movl	%ecx, 40(%rsp)	 # tmp230,
	movl	-16(%rbp), %ecx	 # numb, tmp231
	movl	%ecx, 32(%rsp)	 # tmp231,
	movq	%rax, %rcx	 # tmp228,
	call	in	 #
	subl	$1, -8(%rbp)	 #, j
.L129:
	cmpl	$0, -8(%rbp)	 #, j
	jns	.L130	 #,
	subl	$1, -4(%rbp)	 #, i
.L128:
	cmpl	$0, -4(%rbp)	 #, i
	jns	.L131	 #,
	addl	$1, -56(%rbp)	 #, mode
	movq	$0, -80(%rbp)	 #, temp_ptr
	movq	-72(%rbp), %rax	 # ptr, tmp232
	movq	%rax, -32(%rbp)	 # tmp232, new_ptr
	movq	$0, -40(%rbp)	 #, add_ptr
	movl	$0, -12(%rbp)	 #, k
	movl	$0, -20(%rbp)	 #, quad
	movl	$0, -4(%rbp)	 #, i
	jmp	.L132	 #
.L137:
	movl	$0, -8(%rbp)	 #, j
	jmp	.L133	 #
.L136:
	movl	-52(%rbp), %eax	 # N, tmp233
	movl	%eax, -16(%rbp)	 # tmp233, numb
	jmp	.L134	 #
.L135:
	movq	$0, -40(%rbp)	 #, add_ptr
	movq	-32(%rbp), %rax	 # new_ptr, tmp234
	movq	%rax, -72(%rbp)	 # tmp234, ptr
	movl	-12(%rbp), %r9d	 # k, tmp235
	movl	-8(%rbp), %r8d	 # j, tmp236
	movl	-4(%rbp), %edx	 # i, tmp237
	leaq	-72(%rbp), %rax	 #, tmp238
	movl	-16(%rbp), %ecx	 # numb, tmp239
	movl	%ecx, 40(%rsp)	 # tmp239,
	movl	-20(%rbp), %ecx	 # quad, tmp240
	movl	%ecx, 32(%rsp)	 # tmp240,
	movq	%rax, %rcx	 # tmp238,
	call	findcol	 #
	movq	-72(%rbp), %rax	 # ptr, ptr.17
	movq	%rax, -80(%rbp)	 # ptr.17, temp_ptr
	movl	-12(%rbp), %r9d	 # k, tmp241
	movl	-8(%rbp), %r8d	 # j, tmp242
	movl	-4(%rbp), %edx	 # i, tmp243
	leaq	-80(%rbp), %rax	 #, tmp244
	movl	-56(%rbp), %ecx	 # mode, tmp245
	movl	%ecx, 48(%rsp)	 # tmp245,
	movl	$0, 40(%rsp)	 #,
	movl	-16(%rbp), %ecx	 # numb, tmp246
	movl	%ecx, 32(%rsp)	 # tmp246,
	movq	%rax, %rcx	 # tmp244,
	call	in	 #
	subl	$1, -16(%rbp)	 #, numb
.L134:
	cmpl	$0, -16(%rbp)	 #, numb
	jg	.L135	 #,
	addl	$1, -8(%rbp)	 #, j
.L133:
	movl	-8(%rbp), %eax	 # j, tmp247
	cmpl	-52(%rbp), %eax	 # N, tmp247
	jl	.L136	 #,
	addl	$1, -4(%rbp)	 #, i
.L132:
	movl	-4(%rbp), %eax	 # i, tmp248
	cmpl	-52(%rbp), %eax	 # N, tmp248
	jl	.L137	 #,
	movl	$1, -12(%rbp)	 #, k
	movl	$0, -20(%rbp)	 #, quad
	movl	$0, -4(%rbp)	 #, i
	jmp	.L138	 #
.L143:
	movl	-52(%rbp), %eax	 # N, tmp249
	movl	%eax, -16(%rbp)	 # tmp249, numb
	jmp	.L139	 #
.L142:
	movl	-52(%rbp), %eax	 # N, tmp251
	subl	$1, %eax	 #, tmp250
	movl	%eax, -8(%rbp)	 # tmp250, j
	jmp	.L140	 #
.L141:
	movq	$0, -40(%rbp)	 #, add_ptr
	movq	-32(%rbp), %rax	 # new_ptr, tmp252
	movq	%rax, -72(%rbp)	 # tmp252, ptr
	movl	-12(%rbp), %r9d	 # k, tmp253
	movl	-8(%rbp), %r8d	 # j, tmp254
	movl	-4(%rbp), %edx	 # i, tmp255
	leaq	-72(%rbp), %rax	 #, tmp256
	movl	-16(%rbp), %ecx	 # numb, tmp257
	movl	%ecx, 40(%rsp)	 # tmp257,
	movl	-20(%rbp), %ecx	 # quad, tmp258
	movl	%ecx, 32(%rsp)	 # tmp258,
	movq	%rax, %rcx	 # tmp256,
	call	findcol	 #
	movq	-72(%rbp), %rax	 # ptr, ptr.18
	movq	%rax, -80(%rbp)	 # ptr.18, temp_ptr
	movl	-12(%rbp), %r9d	 # k, tmp259
	movl	-8(%rbp), %r8d	 # j, tmp260
	movl	-4(%rbp), %edx	 # i, tmp261
	leaq	-80(%rbp), %rax	 #, tmp262
	movl	-56(%rbp), %ecx	 # mode, tmp263
	movl	%ecx, 48(%rsp)	 # tmp263,
	movl	$0, 40(%rsp)	 #,
	movl	-16(%rbp), %ecx	 # numb, tmp264
	movl	%ecx, 32(%rsp)	 # tmp264,
	movq	%rax, %rcx	 # tmp262,
	call	in	 #
	subl	$1, -8(%rbp)	 #, j
.L140:
	cmpl	$0, -8(%rbp)	 #, j
	jns	.L141	 #,
	subl	$1, -16(%rbp)	 #, numb
.L139:
	cmpl	$0, -16(%rbp)	 #, numb
	jg	.L142	 #,
	addl	$1, -4(%rbp)	 #, i
.L138:
	movl	-4(%rbp), %eax	 # i, tmp265
	cmpl	-52(%rbp), %eax	 # N, tmp265
	jl	.L143	 #,
	movl	$2, -12(%rbp)	 #, k
	movl	$0, -20(%rbp)	 #, quad
	movl	$0, -8(%rbp)	 #, j
	jmp	.L144	 #
.L149:
	movl	-52(%rbp), %eax	 # N, tmp266
	movl	%eax, -16(%rbp)	 # tmp266, numb
	jmp	.L145	 #
.L148:
	movl	-52(%rbp), %eax	 # N, tmp268
	subl	$1, %eax	 #, tmp267
	movl	%eax, -4(%rbp)	 # tmp267, i
	jmp	.L146	 #
.L147:
	movq	$0, -40(%rbp)	 #, add_ptr
	movq	-32(%rbp), %rax	 # new_ptr, tmp269
	movq	%rax, -72(%rbp)	 # tmp269, ptr
	movl	-12(%rbp), %r9d	 # k, tmp270
	movl	-8(%rbp), %r8d	 # j, tmp271
	movl	-4(%rbp), %edx	 # i, tmp272
	leaq	-72(%rbp), %rax	 #, tmp273
	movl	-16(%rbp), %ecx	 # numb, tmp274
	movl	%ecx, 40(%rsp)	 # tmp274,
	movl	-20(%rbp), %ecx	 # quad, tmp275
	movl	%ecx, 32(%rsp)	 # tmp275,
	movq	%rax, %rcx	 # tmp273,
	call	findcol	 #
	movq	-72(%rbp), %rax	 # ptr, ptr.19
	movq	%rax, -80(%rbp)	 # ptr.19, temp_ptr
	movl	-12(%rbp), %r9d	 # k, tmp276
	movl	-8(%rbp), %r8d	 # j, tmp277
	movl	-4(%rbp), %edx	 # i, tmp278
	leaq	-80(%rbp), %rax	 #, tmp279
	movl	-56(%rbp), %ecx	 # mode, tmp280
	movl	%ecx, 48(%rsp)	 # tmp280,
	movl	$0, 40(%rsp)	 #,
	movl	-16(%rbp), %ecx	 # numb, tmp281
	movl	%ecx, 32(%rsp)	 # tmp281,
	movq	%rax, %rcx	 # tmp279,
	call	in	 #
	subl	$1, -4(%rbp)	 #, i
.L146:
	cmpl	$0, -4(%rbp)	 #, i
	jns	.L147	 #,
	subl	$1, -16(%rbp)	 #, numb
.L145:
	cmpl	$0, -16(%rbp)	 #, numb
	jg	.L148	 #,
	addl	$1, -8(%rbp)	 #, j
.L144:
	movl	-8(%rbp), %eax	 # j, tmp282
	cmpl	-52(%rbp), %eax	 # N, tmp282
	jl	.L149	 #,
	movl	$3, -12(%rbp)	 #, k
	movl	$1, -20(%rbp)	 #, quad
	jmp	.L150	 #
.L158:
	movl	$1, -16(%rbp)	 #, numb
	jmp	.L151	 #
.L157:
	movq	$0, -40(%rbp)	 #, add_ptr
	movq	-32(%rbp), %rax	 # new_ptr, tmp283
	movq	%rax, -72(%rbp)	 # tmp283, ptr
	movl	-12(%rbp), %ecx	 # k, tmp284
	leaq	-72(%rbp), %rax	 #, tmp285
	movl	-16(%rbp), %edx	 # numb, tmp286
	movl	%edx, 40(%rsp)	 # tmp286,
	movl	-20(%rbp), %edx	 # quad, tmp287
	movl	%edx, 32(%rsp)	 # tmp287,
	movl	%ecx, %r9d	 # tmp284,
	movl	$0, %r8d	 #,
	movl	$0, %edx	 #,
	movq	%rax, %rcx	 # tmp285,
	call	findcol	 #
	movq	-72(%rbp), %rax	 # ptr, ptr.20
	movq	%rax, -80(%rbp)	 # ptr.20, temp_ptr
	movl	$0, -4(%rbp)	 #, i
	jmp	.L152	 #
.L156:
	movl	$0, -8(%rbp)	 #, j
	jmp	.L153	 #
.L155:
	movl	P(%rip), %edx	 # P,
	movl	%edx, -84(%rbp)	 #, %sfp
	movl	-4(%rbp), %eax	 # i, tmp290
	movl	%eax, %edx	 # tmp290,
	sarl	$31, %edx	 #,
	idivl	-84(%rbp)	 # %sfp
	movl	%eax, %edx	 # tmp288, D.4156
	movl	P(%rip), %eax	 # P, P.22
	movl	%edx, %ecx	 # D.4156, D.4158
	imull	%eax, %ecx	 # P.22, D.4158
	movl	P(%rip), %edx	 # P,
	movl	%edx, -84(%rbp)	 #, %sfp
	movl	-8(%rbp), %eax	 # j, tmp293
	movl	%eax, %edx	 # tmp293,
	sarl	$31, %edx	 #,
	idivl	-84(%rbp)	 # %sfp
	addl	%ecx, %eax	 # D.4158, D.4161
	addl	$1, %eax	 #, tmp294
	movl	%eax, -60(%rbp)	 # tmp294, s
	movq	-80(%rbp), %rax	 # temp_ptr, temp_ptr.24
	movl	8(%rax), %eax	 # temp_ptr.24_152->quad, D.4163
	cmpl	-60(%rbp), %eax	 # s, D.4163
	jne	.L154	 #,
	movl	-12(%rbp), %r9d	 # k, tmp295
	movl	-8(%rbp), %r8d	 # j, tmp296
	movl	-4(%rbp), %edx	 # i, tmp297
	leaq	-80(%rbp), %rax	 #, tmp298
	movl	-56(%rbp), %ecx	 # mode, tmp299
	movl	%ecx, 48(%rsp)	 # tmp299,
	movl	-20(%rbp), %ecx	 # quad, tmp300
	movl	%ecx, 40(%rsp)	 # tmp300,
	movl	-16(%rbp), %ecx	 # numb, tmp301
	movl	%ecx, 32(%rsp)	 # tmp301,
	movq	%rax, %rcx	 # tmp298,
	call	in	 #
.L154:
	addl	$1, -8(%rbp)	 #, j
.L153:
	movl	-8(%rbp), %eax	 # j, tmp302
	cmpl	-52(%rbp), %eax	 # N, tmp302
	jl	.L155	 #,
	addl	$1, -4(%rbp)	 #, i
.L152:
	movl	-4(%rbp), %eax	 # i, tmp303
	cmpl	-52(%rbp), %eax	 # N, tmp303
	jl	.L156	 #,
	addl	$1, -16(%rbp)	 #, numb
.L151:
	movl	-52(%rbp), %eax	 # N, tmp304
	addl	$1, %eax	 #, D.4166
	cmpl	-16(%rbp), %eax	 # numb, D.4166
	jg	.L157	 #,
	addl	$1, -20(%rbp)	 #, quad
.L150:
	movl	-52(%rbp), %eax	 # N, tmp305
	addl	$1, %eax	 #, D.4167
	cmpl	-20(%rbp), %eax	 # quad, D.4167
	jg	.L158	 #,
	jmp	.L159	 #
.L160:
	movq	-72(%rbp), %rax	 # ptr, ptr.25
	movq	24(%rax), %rax	 # ptr.25_160->left, ptr.26
	movq	%rax, -72(%rbp)	 # ptr.26, ptr
.L159:
	movq	-72(%rbp), %rax	 # ptr, ptr.27
	movq	24(%rax), %rax	 # ptr.27_158->left, D.4171
	testq	%rax, %rax	 # D.4171
	jne	.L160	 #,
	movl	$0, -4(%rbp)	 #, i
	jmp	.L161	 #
.L183:
	movq	-72(%rbp), %rax	 # ptr, ptr.28
	movq	%rax, -80(%rbp)	 # ptr.28, temp_ptr
	movq	-80(%rbp), %rax	 # temp_ptr, temp_ptr.29
	movq	48(%rax), %rax	 # temp_ptr.29_166->down, temp_ptr.30
	movq	%rax, -80(%rbp)	 # temp_ptr.30, temp_ptr
	jmp	.L162	 #
.L182:
	movq	-80(%rbp), %rax	 # temp_ptr, tmp306
	movq	%rax, -32(%rbp)	 # tmp306, new_ptr
	movl	$1, -12(%rbp)	 #, k
	jmp	.L163	 #
.L181:
	movq	-72(%rbp), %rax	 # ptr, tmp307
	movq	%rax, -40(%rbp)	 # tmp307, add_ptr
	jmp	.L164	 #
.L165:
	movq	-40(%rbp), %rax	 # add_ptr, tmp308
	movq	32(%rax), %rax	 # add_ptr_30->right, tmp309
	movq	%rax, -40(%rbp)	 # tmp309, add_ptr
.L164:
	movq	-40(%rbp), %rax	 # add_ptr, tmp310
	movl	12(%rax), %eax	 # add_ptr_30->key, D.4175
	cmpl	-12(%rbp), %eax	 # k, D.4175
	jne	.L165	 #,
	cmpl	$1, -12(%rbp)	 #, k
	jne	.L166	 #,
	jmp	.L167	 #
.L168:
	movq	-40(%rbp), %rax	 # add_ptr, tmp311
	movq	32(%rax), %rax	 # add_ptr_31->right, tmp312
	movq	%rax, -40(%rbp)	 # tmp312, add_ptr
.L167:
	movq	-40(%rbp), %rax	 # add_ptr, tmp313
	movl	(%rax), %edx	 # add_ptr_31->row, D.4178
	movq	-80(%rbp), %rax	 # temp_ptr, temp_ptr.31
	movl	(%rax), %eax	 # temp_ptr.31_175->row, D.4180
	cmpl	%eax, %edx	 # D.4180, D.4178
	jne	.L168	 #,
.L166:
	cmpl	$2, -12(%rbp)	 #, k
	jne	.L169	 #,
	jmp	.L170	 #
.L171:
	movq	-40(%rbp), %rax	 # add_ptr, tmp314
	movq	32(%rax), %rax	 # add_ptr_33->right, tmp315
	movq	%rax, -40(%rbp)	 # tmp315, add_ptr
.L170:
	movq	-40(%rbp), %rax	 # add_ptr, tmp316
	movl	4(%rax), %edx	 # add_ptr_33->col, D.4183
	movq	-80(%rbp), %rax	 # temp_ptr, temp_ptr.32
	movl	4(%rax), %eax	 # temp_ptr.32_179->col, D.4185
	cmpl	%eax, %edx	 # D.4185, D.4183
	jne	.L171	 #,
.L169:
	cmpl	$3, -12(%rbp)	 #, k
	jne	.L196	 #,
	jmp	.L173	 #
.L174:
	movq	-40(%rbp), %rax	 # add_ptr, tmp317
	movq	32(%rax), %rax	 # add_ptr_35->right, tmp318
	movq	%rax, -40(%rbp)	 # tmp318, add_ptr
.L173:
	movq	-40(%rbp), %rax	 # add_ptr, tmp319
	movl	8(%rax), %edx	 # add_ptr_35->quad, D.4188
	movq	-80(%rbp), %rax	 # temp_ptr, temp_ptr.33
	movl	8(%rax), %eax	 # temp_ptr.33_183->quad, D.4190
	cmpl	%eax, %edx	 # D.4190, D.4188
	jne	.L174	 #,
	jmp	.L196	 #
.L176:
	movq	-40(%rbp), %rax	 # add_ptr, tmp320
	movq	32(%rax), %rax	 # add_ptr_37->right, tmp321
	movq	%rax, -40(%rbp)	 # tmp321, add_ptr
	jmp	.L175	 #
.L196:
	nop
.L175:
	movq	-40(%rbp), %rax	 # add_ptr, tmp322
	movl	16(%rax), %edx	 # add_ptr_37->numb, D.4191
	movq	-80(%rbp), %rax	 # temp_ptr, temp_ptr.34
	movl	16(%rax), %eax	 # temp_ptr.34_187->numb, D.4193
	cmpl	%eax, %edx	 # D.4193, D.4191
	jne	.L176	 #,
	movq	-40(%rbp), %rax	 # add_ptr, tmp323
	movq	48(%rax), %rax	 # add_ptr_37->down, tmp324
	movq	%rax, -40(%rbp)	 # tmp324, add_ptr
	jmp	.L177	 #
.L178:
	movq	-40(%rbp), %rax	 # add_ptr, tmp325
	movq	48(%rax), %rax	 # add_ptr_38->down, tmp326
	movq	%rax, -40(%rbp)	 # tmp326, add_ptr
.L177:
	movq	-40(%rbp), %rax	 # add_ptr, tmp327
	movl	(%rax), %edx	 # add_ptr_38->row, D.4194
	movq	-72(%rbp), %rax	 # ptr, ptr.35
	movl	(%rax), %eax	 # ptr.35_192->row, D.4196
	cmpl	%eax, %edx	 # D.4196, D.4194
	jne	.L178	 #,
	jmp	.L179	 #
.L180:
	movq	-40(%rbp), %rax	 # add_ptr, tmp328
	movq	48(%rax), %rax	 # add_ptr_39->down, tmp329
	movq	%rax, -40(%rbp)	 # tmp329, add_ptr
.L179:
	movq	-40(%rbp), %rax	 # add_ptr, tmp330
	movl	4(%rax), %edx	 # add_ptr_39->col, D.4197
	movq	-72(%rbp), %rax	 # ptr, ptr.36
	movl	4(%rax), %eax	 # ptr.36_196->col, D.4199
	cmpl	%eax, %edx	 # D.4199, D.4197
	jne	.L180	 #,
	movq	-32(%rbp), %rax	 # new_ptr, tmp331
	movq	-40(%rbp), %rdx	 # add_ptr, tmp332
	movq	%rdx, 32(%rax)	 # tmp332, new_ptr_29->right
	movq	-40(%rbp), %rax	 # add_ptr, tmp333
	movq	-32(%rbp), %rdx	 # new_ptr, tmp334
	movq	%rdx, 24(%rax)	 # tmp334, add_ptr_39->left
	movq	-40(%rbp), %rax	 # add_ptr, tmp335
	movq	%rax, -32(%rbp)	 # tmp335, new_ptr
	addl	$1, -12(%rbp)	 #, k
.L163:
	cmpl	$3, -12(%rbp)	 #, k
	jle	.L181	 #,
	movq	-80(%rbp), %rax	 # temp_ptr, temp_ptr.37
	movq	48(%rax), %rax	 # temp_ptr.37_201->down, temp_ptr.38
	movq	%rax, -80(%rbp)	 # temp_ptr.38, temp_ptr
.L162:
	movq	-80(%rbp), %rax	 # temp_ptr, temp_ptr.39
	testq	%rax, %rax	 # temp_ptr.39
	jne	.L182	 #,
	movq	-72(%rbp), %rax	 # ptr, ptr.40
	movq	32(%rax), %rax	 # ptr.40_203->right, ptr.41
	movq	%rax, -72(%rbp)	 # ptr.41, ptr
	addl	$1, -4(%rbp)	 #, i
.L161:
	movq	-72(%rbp), %rax	 # ptr, ptr.42
	movl	12(%rax), %eax	 # ptr.42_163->key, D.4206
	cmpl	$1, %eax	 #, D.4206
	jne	.L183	 #,
	jmp	.L184	 #
.L185:
	movq	-72(%rbp), %rax	 # ptr, ptr.43
	movq	24(%rax), %rax	 # ptr.43_208->left, ptr.44
	movq	%rax, -72(%rbp)	 # ptr.44, ptr
.L184:
	movq	-72(%rbp), %rax	 # ptr, ptr.45
	movq	24(%rax), %rax	 # ptr.45_206->left, D.4210
	testq	%rax, %rax	 # D.4210
	jne	.L185	 #,
	movl	$0, -4(%rbp)	 #, i
	jmp	.L186	 #
.L194:
	movl	$0, -8(%rbp)	 #, j
	jmp	.L187	 #
.L193:
	movl	-4(%rbp), %eax	 # i, tmp336
	cltq
	movq	%rax, %rdx	 # D.4211, D.4212
	salq	$6, %rdx	 #, D.4212
	movq	16(%rbp), %rax	 # Matrix, tmp337
	addq	%rax, %rdx	 # tmp337, D.4213
	movl	-8(%rbp), %eax	 # j, tmp339
	cltq
	movl	(%rdx,%rax,4), %eax	 # *D.4213_215, D.4214
	testl	%eax, %eax	 # D.4214
	je	.L188	 #,
	movl	P(%rip), %edx	 # P,
	movl	%edx, -84(%rbp)	 #, %sfp
	movl	-4(%rbp), %eax	 # i, tmp342
	movl	%eax, %edx	 # tmp342,
	sarl	$31, %edx	 #,
	idivl	-84(%rbp)	 # %sfp
	movl	%eax, %edx	 # tmp340, D.4218
	movl	P(%rip), %eax	 # P, P.47
	movl	%edx, %ecx	 # D.4218, D.4220
	imull	%eax, %ecx	 # P.47, D.4220
	movl	P(%rip), %edx	 # P,
	movl	%edx, -84(%rbp)	 #, %sfp
	movl	-8(%rbp), %eax	 # j, tmp345
	movl	%eax, %edx	 # tmp345,
	sarl	$31, %edx	 #,
	idivl	-84(%rbp)	 # %sfp
	addl	%ecx, %eax	 # D.4220, D.4223
	addl	$1, %eax	 #, tmp346
	movl	%eax, -20(%rbp)	 # tmp346, quad
	movq	-72(%rbp), %rax	 # ptr, ptr.49
	testq	%rax, %rax	 # ptr.49
	je	.L189	 #,
	movl	-4(%rbp), %eax	 # i, tmp347
	cltq
	movq	%rax, %rdx	 # D.4227, D.4228
	salq	$6, %rdx	 #, D.4228
	movq	16(%rbp), %rax	 # Matrix, tmp348
	addq	%rax, %rdx	 # tmp348, D.4229
	movl	-8(%rbp), %eax	 # j, tmp350
	cltq
	movl	(%rdx,%rax,4), %ecx	 # *D.4229_228, D.4230
	movl	-8(%rbp), %r8d	 # j, tmp351
	movl	-4(%rbp), %edx	 # i, tmp352
	leaq	-72(%rbp), %rax	 #, tmp353
	movl	%ecx, 40(%rsp)	 # D.4230,
	movl	$0, 32(%rsp)	 #,
	movl	$0, %r9d	 #,
	movq	%rax, %rcx	 # tmp353,
	call	findcol	 #
.L189:
	movq	-72(%rbp), %rax	 # ptr, ptr.50
	testq	%rax, %rax	 # ptr.50
	je	.L190	 #,
	movl	-4(%rbp), %eax	 # i, tmp354
	cltq
	movq	%rax, %rdx	 # D.4234, D.4235
	salq	$6, %rdx	 #, D.4235
	movq	16(%rbp), %rax	 # Matrix, tmp355
	addq	%rax, %rdx	 # tmp355, D.4236
	movl	-8(%rbp), %eax	 # j, tmp357
	cltq
	movl	(%rdx,%rax,4), %ecx	 # *D.4236_233, D.4237
	movq	-72(%rbp), %rax	 # ptr, ptr.51
	movl	8(%rax), %r9d	 # ptr.51_235->quad, D.4239
	movl	-8(%rbp), %r8d	 # j, tmp358
	movl	-4(%rbp), %edx	 # i, tmp359
	leaq	-72(%rbp), %rax	 #, tmp360
	movl	$0, 48(%rsp)	 #,
	movq	$0, 40(%rsp)	 #,
	movl	%ecx, 32(%rsp)	 # D.4237,
	movq	%rax, %rcx	 # tmp360,
	call	movecol	 #
.L190:
	movq	-72(%rbp), %rax	 # ptr, ptr.52
	testq	%rax, %rax	 # ptr.52
	je	.L188	 #,
	jmp	.L191	 #
.L192:
	movq	-72(%rbp), %rax	 # ptr, ptr.53
	movq	24(%rax), %rax	 # ptr.53_240->left, ptr.54
	movq	%rax, -72(%rbp)	 # ptr.54, ptr
.L191:
	movq	-72(%rbp), %rax	 # ptr, ptr.55
	movq	24(%rax), %rax	 # ptr.55_238->left, D.4246
	testq	%rax, %rax	 # D.4246
	jne	.L192	 #,
.L188:
	addl	$1, -8(%rbp)	 #, j
.L187:
	movl	-8(%rbp), %eax	 # j, tmp361
	cmpl	-52(%rbp), %eax	 # N, tmp361
	jl	.L193	 #,
	addl	$1, -4(%rbp)	 #, i
.L186:
	movl	-4(%rbp), %eax	 # i, tmp362
	cmpl	-52(%rbp), %eax	 # N, tmp362
	jl	.L194	 #,
	movq	-72(%rbp), %rax	 # ptr, ptr.56
	movq	16(%rbp), %r8	 # Matrix,
	movl	$1, %edx	 #,
	movq	%rax, %rcx	 # ptr.56,
	call	dance	 #
	movl	%eax, -60(%rbp)	 # tmp363, s
	call	clock	 #
	cvtsi2ss	%eax, %xmm0	 # D.4248, tmp364
	movss	%xmm0, -48(%rbp)	 # tmp364, finish
	movl	-60(%rbp), %eax	 # s, D.4249
	addq	$160, %rsp	 #,
	popq	%rbp	 #
	ret
	.seh_endproc
	.def	__main;	.scl	2;	.type	32;	.endef
	.section .rdata,"dr"
.LC1:
	.ascii "enter Matrix[%d][%d]:\0"
.LC2:
	.ascii "%d\0"
.LC3:
	.ascii "%d \0"
.LC4:
	.ascii "No solution\0"
	.text
	.globl	main
	.def	main;	.scl	2;	.type	32;	.endef
	.seh_proc	main
main:
	pushq	%rbp	 #
	.seh_pushreg	%rbp
	pushq	%rdi	 #
	.seh_pushreg	%rdi
	subq	$1080, %rsp	 #,
	.seh_stackalloc	1080
	leaq	128(%rsp), %rbp	 #,
	.seh_setframe	%rbp, 128
	.seh_endprologue
	call	__main	 #
	movl	P(%rip), %edx	 # P, P.0
	movl	P(%rip), %eax	 # P, P.1
	imull	%edx, %eax	 # P.0, tmp72
	movl	%eax, 932(%rbp)	 # tmp72, N
	leaq	-96(%rbp), %r8	 #, tmp73
	movl	$0, %eax	 #, tmp74
	movl	$128, %edx	 #, tmp75
	movq	%r8, %rdi	 # tmp73,
	movq	%rdx, %rcx	 # tmp75,
	rep stosq
	movl	$0, 940(%rbp)	 #, i
	movl	$0, 936(%rbp)	 #, j
	movl	$0, 940(%rbp)	 #, i
	jmp	.L198	 #
.L201:
	movl	$0, 936(%rbp)	 #, j
	jmp	.L199	 #
.L200:
	movl	936(%rbp), %eax	 # j, tmp77
	cltq
	movl	940(%rbp), %edx	 # i, tmp79
	movslq	%edx, %rdx	 # tmp79, tmp78
	salq	$4, %rdx	 #, tmp80
	addq	%rdx, %rax	 # tmp80, tmp81
	movl	$0, -96(%rbp,%rax,4)	 #, Matrix
	addl	$1, 936(%rbp)	 #, j
.L199:
	movl	936(%rbp), %eax	 # j, tmp82
	cmpl	932(%rbp), %eax	 # N, tmp82
	jl	.L200	 #,
	addl	$1, 940(%rbp)	 #, i
.L198:
	movl	940(%rbp), %eax	 # i, tmp83
	cmpl	932(%rbp), %eax	 # N, tmp83
	jl	.L201	 #,
	movl	$0, 940(%rbp)	 #, i
	movl	$0, 936(%rbp)	 #, j
	movl	$0, 940(%rbp)	 #, i
	jmp	.L202	 #
.L205:
	movl	$0, 936(%rbp)	 #, j
	jmp	.L203	 #
.L204:
	movl	936(%rbp), %edx	 # j, tmp84
	movl	940(%rbp), %eax	 # i, tmp85
	movl	%edx, %r8d	 # tmp84,
	movl	%eax, %edx	 # tmp85,
	leaq	.LC1(%rip), %rcx	 #,
	call	printf	 #
	leaq	-96(%rbp), %rax	 #, tmp86
	movl	936(%rbp), %edx	 # j, tmp88
	movslq	%edx, %rdx	 # tmp88, tmp87
	movl	940(%rbp), %ecx	 # i, tmp90
	movslq	%ecx, %rcx	 # tmp90, tmp89
	salq	$4, %rcx	 #, tmp91
	addq	%rcx, %rdx	 # tmp91, tmp92
	salq	$2, %rdx	 #, tmp93
	addq	%rdx, %rax	 # tmp93, D.4112
	movq	%rax, %rdx	 # D.4112,
	leaq	.LC2(%rip), %rcx	 #,
	call	scanf	 #
	addl	$1, 936(%rbp)	 #, j
.L203:
	movl	936(%rbp), %eax	 # j, tmp94
	cmpl	932(%rbp), %eax	 # N, tmp94
	jl	.L204	 #,
	addl	$1, 940(%rbp)	 #, i
.L202:
	movl	940(%rbp), %eax	 # i, tmp95
	cmpl	932(%rbp), %eax	 # N, tmp95
	jl	.L205	 #,
	movl	$0, 940(%rbp)	 #, i
	jmp	.L206	 #
.L209:
	movl	$0, 936(%rbp)	 #, j
	jmp	.L207	 #
.L208:
	movl	936(%rbp), %eax	 # j, tmp97
	cltq
	movl	940(%rbp), %edx	 # i, tmp99
	movslq	%edx, %rdx	 # tmp99, tmp98
	salq	$4, %rdx	 #, tmp100
	addq	%rdx, %rax	 # tmp100, tmp101
	movl	-96(%rbp,%rax,4), %eax	 # Matrix, D.4113
	movl	%eax, %edx	 # D.4113,
	leaq	.LC3(%rip), %rcx	 #,
	call	printf	 #
	addl	$1, 936(%rbp)	 #, j
.L207:
	movl	936(%rbp), %eax	 # j, tmp102
	cmpl	932(%rbp), %eax	 # N, tmp102
	jl	.L208	 #,
	movl	$10, %ecx	 #,
	call	putchar	 #
	addl	$1, 940(%rbp)	 #, i
.L206:
	movl	940(%rbp), %eax	 # i, tmp103
	cmpl	932(%rbp), %eax	 # N, tmp103
	jl	.L209	 #,
	movl	$0, 940(%rbp)	 #, i
	movl	$0, 936(%rbp)	 #, j
	movl	$10, %ecx	 #,
	call	putchar	 #
	movl	$10, %ecx	 #,
	call	putchar	 #
	leaq	-96(%rbp), %rax	 #, tmp104
	movq	%rax, %rcx	 # tmp104,
	call	begin_X	 #
	movl	%eax, 940(%rbp)	 # tmp105, i
	cmpl	$0, 940(%rbp)	 #, i
	jne	.L210	 #,
	movl	$0, 940(%rbp)	 #, i
	jmp	.L211	 #
.L214:
	movl	$0, 936(%rbp)	 #, j
	jmp	.L212	 #
.L213:
	movl	936(%rbp), %eax	 # j, tmp107
	cltq
	movl	940(%rbp), %edx	 # i, tmp109
	movslq	%edx, %rdx	 # tmp109, tmp108
	salq	$4, %rdx	 #, tmp110
	addq	%rdx, %rax	 # tmp110, tmp111
	movl	-96(%rbp,%rax,4), %eax	 # Matrix, D.4116
	movl	%eax, %edx	 # D.4116,
	leaq	.LC3(%rip), %rcx	 #,
	call	printf	 #
	addl	$1, 936(%rbp)	 #, j
.L212:
	movl	P(%rip), %edx	 # P, P.2
	movl	P(%rip), %eax	 # P, P.3
	imull	%edx, %eax	 # P.2, D.4119
	cmpl	936(%rbp), %eax	 # j, D.4119
	jg	.L213	 #,
	movl	$10, %ecx	 #,
	call	putchar	 #
	addl	$1, 940(%rbp)	 #, i
.L211:
	movl	P(%rip), %edx	 # P, P.4
	movl	P(%rip), %eax	 # P, P.5
	imull	%edx, %eax	 # P.4, D.4122
	cmpl	940(%rbp), %eax	 # i, D.4122
	jg	.L214	 #,
	jmp	.L215	 #
.L210:
	leaq	.LC4(%rip), %rcx	 #,
	call	puts	 #
.L215:
	movl	940(%rbp), %eax	 # i, D.4124
	addq	$1080, %rsp	 #,
	popq	%rdi	 #
	popq	%rbp	 #
	ret
	.seh_endproc
	.section .rdata,"dr"
	.align 4
.LC0:
	.long	0
	.def	malloc;	.scl	2;	.type	32;	.endef
	.def	memset;	.scl	2;	.type	32;	.endef
	.def	free;	.scl	2;	.type	32;	.endef
	.def	clock;	.scl	2;	.type	32;	.endef
	.def	putchar;	.scl	2;	.type	32;	.endef
	.def	puts;	.scl	2;	.type	32;	.endef
	.def	printf;	.scl	2;	.type	32;	.endef
	.def	scanf;	.scl	2;	.type	32;	.endef
